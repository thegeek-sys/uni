{
    "id": 73,
    "description": "Dati il path ad una directory e il path ad un file html, la funzione legge ricorsivamente il contenuto della directory e costruisce l'albero della struttara della directory in html, salva labero nel file html dato in input, ritorna l'albero costrouito.",
    "text": "Si definisca la funzione  ricorsiva (o che usa una vostra funzione ricorsiva) es73(dir, htmlfile) che, data una directory,\n    ne legge la struttura e costruisce ricorsivamente l'albero dei nodi my_html.HTMLNode\n\tdi un documento html da salvare in un file.\n    Argomenti:\n        dir:      percorso della directory radice da scandire\n        htmlFile: percorso del file html da scrivere\n    L'albero da costruire deve contenere una serie di liste puntate che elencano i file e le directory trovate secondo la struttura:\n    <ul>\n        <li>dirRadice\n            <ul>\n                <li>nomeFile</li>\n                <li>nomeDir\n                    <ul>\n                    <li>nomeFile</li>\n                    <li>nomefile</li>\n                    </ul>\n                </li>\n                <li>nomeFile</li>\n                <li>nomeDir\n                    <ul>\n                    <li>nomeFile</li>\n                    <li>nomefile</li>\n                    </ul>\n                </li>\n            </ul>\n        </li>\n    </ul>\n    (nota, ho indentato la struttura per farla capire, ma non va fatto altrimenti i file sono diversi)\n    Per produrre il file HTML indicato dovete prima costruirne l'albero di my_html.HTMLNode e poi salvarlo su file.\n    L'albero deve contenere un nodo con tag=\"ul\" per ogni directory,\n    All'interno del tag 'ul' ci devono essere tanti tag='li' quanti sono i file/dir contenuti (in ordina alfabetico).\n    Ciascun tag 'li' ha come contenuto il nome del file/dir (sotto forma di un tag='_text_').\n    Se si tratta di una directory, dopo il tag '_text_' si aggiunge un tag 'ul' che elenca il contenuto della directory.\n    La funzione inoltre ritorna l'albero costruito.\n",
    "algorithm": "Dichiariamo la funzione pathToDom(path, name), ricorsiva:\n\tdati in input il path e il nome di un file/directory, ritorna il corrispettivo albero HTML\n\tinizializza una variabile DOM di tipo HTMLNode, con tag 'li', attr un dizionario vuoto e content una lista con un tag di tipo '_text_', attr un dizionario vuoto e content il nome del file\n\tse il file Ã¨ una directori (costruiamo l'labero della directory):\n\t\tinizializza una lista vuota contenuti\n\t\tprendi i file della directory e ordinali\n\t\tper ogni file:\n\t\t\tcrea il path del file\n\t\t\taggiungi a contenuti il risultato della chiamata pathToDom(nuovopath, nomefile)\n\t\taggiungi al content di DOM un tag di tipo 'ul' con content la lista contenuti, attr sempre un diz vuoto\n\tritorna DOM\n\n\nes73(...)\n\tsalva in una variabile li il risultato della chiamata a pathToDom(..) sulla directory\n\tcrea una variabile DOM di tipo HTMLNode con tag 'ul e content li\n\tscrive nel file html il risultato di DOM.toString()\n\tritorna DOM",
    "tags": ["Alberi", "File", "Ricerca File", "Html"],
    "effort": 6,
    "clues": [],
    "from": "esame-15-2-18"
}