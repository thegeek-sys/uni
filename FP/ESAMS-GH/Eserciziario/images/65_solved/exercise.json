{
    "id": 65,
    "description": "Dati un intero k, una lista di quadrati (rappresentati tramite una sestupla (x, y, l, r, g, b)), e un indirizzo dove salvare l'immagine, la funzione crea un'immagine quadrata di lato k, ci disegna sopra i quadrati rappresentati nella lista e salva l'immagine ottenuta all'indirizzo dato in input, ritorna il numero di pixel neri dell'immagine,",
    "text": "\n    Un quadrato sul piano e' individuato dalla sestupla  di interi (x,y,l,r,g,b) dove\n    (x,y) e' la coordinata del  vertice in alto a sinistra del quadrato,  l e' la lunghezza del lato\n    e gli ultimi tre valori danno il suo colore (r,g,b).\n    La funzione es65(k,lista1,fout) salva in formato PNG all'indirizzo fout un'immagine quadrata\n    di lato $k$ ottenuta come segue:\n    Su di uno sfondo di colore nero (0,0,0) di dimensione k per k  vengono disegnati in\n    sequenza i quadrati in lista1 che ricadono in tutto o in parte nella finestra k per k.\n    Il colore dei quadrati non deve necessariamente essere quello originale ma viene determinato\n    in base a questa regola: il colore del quadrato e' quello originale se nessuno dei pixel su cui incide il quadrato\n    ha un colore maggiore, in caso contrario il colore del quadrato sara' dato dal colore\n    massimo tra quello dei pixel su cui incide.\n    Un colore(x,y,z) e' maggiore di un altro (x',y',z') se x>x' o a parita' y>y' o a parita' z>z'.\n    Infine la funzione deve restituire il numero di pixel di  colore nero che compaiono nell\u2019immagine\n    dopo aver inserito i quadrati.\n    Ad esempio se\n    lista1=[(20,50,20,0,255,0),(30,60,20,255,0,0),(60,50,20,255,0,0),(70,60,20,0,255,0)]\n    con es65(100,lista1,'prova1.png') si otterra' la figura nel file prova1.png\n    e verra' restituito il valore 8600.\n    ",
    "algorithm": "Iniziamo col definire una funzione massimo(c1, c2):\n\tdati due colori c1 e c2\n\tritorna il colore maggiore\n\ndefiniamo la funzione maxColore(img, q)\n\tdati un'immagine e un quadrato\n\tdetermina per ogni pixel del quadrato quale colore deve assumere il quadrato\n\tritorna il colore (r, g, b)\n\ndefiniamo la funzione disegna(img, x, y, l, c):\n\tdati un'immagine, le coordinate (x, y), il lato del quadrato e un colore\n\tdisegna il quadrato nell'immagine a partire dalle coordinate (x, y)\n\nscriviamo adesso la finzione es65(k, lista, fout):\n\tinizializiamo una immagine img, quadrata e di lato k, nera\n\tper ogni quadrato q nella lista:\n\t\tcalcolo il colore massimo per q in img tramite maxColore(..)\n\t\tdisegno il quadrato nell'immagine tramite disegna(..)\n\tsalvo l'immagine in fout\n\tinizializzo un counter a 0\n\tper ogni pixel dell'immagine:\n\t\tse il pixel Ã¨ nero:\n\t\t\tincremento il counter\n\tritorno il counter",
    "tags": ["Immagini", "Matrici"],
    "effort": 6,
    "clues": [],
    "from": "esame-12-7-18"
}